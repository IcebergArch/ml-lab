# ML-learning 手写输入数字识别

## why is ml？
类比下以往固定规则的开发过程，由人编写程序，明确所有长期和情况下怎么处理。
eg: n > 1, say: hello; n > 20, say: large; n > 10000, say: 1w
可能的程序设计是：接收一个输入参数，基于数值判断应该输出什么？示例如下，
```java

    public String getNotice(int n) {
        if (n > 1) {
            return "hello";
        }
        if (n > 20) {
            return "large";
        }
        if (n > 10000) {
            return "1w";
        }
        return "not valid";
    }
```

这有一个问题，如果规则比较复杂，例如：n个条件，每个条件都需要类似 getNotice 的逻辑，那设计的代码如果如上实现会很困难
而这可以通过机器学习搞定，成本反而更低

## what is ml?
from GPT: 机器学习是一种让计算机 通过数据学习规律，从而进行预测、分类或决策的技术，而不是依靠人工编写明确的程序规则。

个人理解：
程序设计：人理解问题 => 拆解逻辑 [case = n * 场景]
机器学习：提供数据 => 学习规律 [case * n]

## ml more important than coding？

短期并非如此，精确处理场景必须使用编程（例如，银行交易、工业生产）
长期必然如此，非精确场景可以使用ML（例如, llm chat, figma to code, page to ui）

但，当ml结果能做到100%或者通过三方工具解决 1-ml_succ_rate

## important things in ml
‘数据（Data）
特征（Features）：输入变量
标签（Labels/Targets）：期望输出（监督学习）

模型（Model）
用于描述输入和输出关系的函数
例：线性回归、决策树、神经网络

算法（Algorithm）
学习模型参数的方法
例：梯度下降、随机森林训练、反向传播

损失函数（Loss Function）
衡量模型预测与真实结果的差距
例：均方误差 (MSE)、交叉熵

优化器（Optimizer）
调整模型参数以最小化损失函数
例：SGD、Adam

## record by self
人通过算法将数据整理为可识别，可解析的标准的数据，并附上答案（num_img, actual_num）

机器学习通过 num_img 训练，将图像识别拆分成 单个像素是否黑白，再聚合成是否有0, 再聚合为最终的可能是n
问题的解决由复杂到简单再由简单聚合出最终结果

最终实现对图像的识别


但，由于学习的图片是有限的，且机器学习不理解数字的图像构成规律，因此，对于未知的写法可能表现差
而且，对于数据 0-9 一般是 给出 0-1 的可能性，优秀的学习结果只是 在最可能的和次可能的概率之间差距较大，例如：0.99， 0.12